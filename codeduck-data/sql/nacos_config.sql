/*
SQLyog Ultimate v12.09 (64 bit)
MySQL - 5.7.18-log : Database - nacos_config
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`nacos_config` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `nacos_config`;

/*Table structure for table `config_info` */

DROP TABLE IF EXISTS `config_info`;

CREATE TABLE `config_info` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `content` longtext COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) COLLATE utf8_bin DEFAULT NULL,
  `c_use` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `effect` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `type` varchar(64) COLLATE utf8_bin DEFAULT NULL,
  `c_schema` text COLLATE utf8_bin,
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`),
  KEY `configinfo_dataid_key_idx` (`data_id`),
  KEY `configinfo_groupid_key_idx` (`group_id`),
  KEY `configinfo_dataid_group_key_idx` (`data_id`,`group_id`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='config_info';

/*Data for the table `config_info` */

insert  into `config_info`(`id`,`data_id`,`group_id`,`content`,`md5`,`gmt_create`,`gmt_modified`,`src_user`,`src_ip`,`app_name`,`tenant_id`,`c_desc`,`c_use`,`effect`,`type`,`c_schema`) values (27,'mogu-admin.yaml','dev','#app\r\nserver:\r\n  port: 8601\r\n\r\n#阿里大于\r\ntemplateCode: SMS_XXXXXX #短信模板编号\r\nsignName: 蘑菇博客\r\n#项目名称\r\nPROJECT_NAME: 蘑菇博客\r\n\r\nfile:\r\n  upload:\r\n    path: D:/mogu_blog/data/\r\n\r\n# 邮箱验证\r\nmoguBlog:\r\n  email: mogublog@163.com\r\n\r\n# 蘑菇博客登录默认密码\r\nDEFAULE_PWD: mogu2018\r\n\r\n#博客相关配置\r\nBLOG:\r\n  HOT_COUNT: 5 #热门博客数量\r\n  NEW_COUNT: 15 #最新博客数据\r\n  FIRST_COUNT: 5 #一级推荐\r\n  SECOND_COUNT: 2 #二级推荐\r\n  THIRD_COUNT: 3 #三级推荐\r\n  FOURTH_COUNT: 5 #四级推荐\r\n\r\n#spring\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  jmx:\r\n    default-domain: mogu_admin\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-admin\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 20\r\n    minIdle: 5\r\n    maxActive: 200\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    validationQuery: SELECT 1 FROM DUAL\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8601\r\n\r\n##eureka相关配置\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    registerWithEureka: true\r\n#    fetchRegistry: true\r\n#    serviceUrl:\r\n#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n  \r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n\r\n\r\n# 或者：\r\nfeign.hystrix.enabled: false #索性禁用feign的hystrix支持\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n\r\n##jwt配置\r\ntokenHead: bearer_\r\ntokenHeader: Authorization\r\nisRememberMeExpiresSecond: 259200 #记住账号为3天有效\r\naudience:\r\n  clientId: 098f6bcd4621d373cade4e832627b4f6\r\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\r\n  name: mogublog\r\n  expiresSecond: 3600  #1个小时 3600\r\n  refreshSecond: 300 # 刷新token的时间 5分钟','ce8eef81522776ceefe77d670af17d49','2020-06-20 09:47:10','2020-06-20 09:47:10',NULL,'0:0:0:0:0:0:0:1','','f431bd53-e6c6-451c-803c-b32712f38562','蘑菇博客 admin  dev配置',NULL,NULL,'yaml',NULL),(28,'mogu-gateway.yaml','dev','server:\r\n  port: 8607\r\n\r\nspring:\r\n  application:\r\n    name: mogu-gateway\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n      config:\r\n        server-addr: localhost:8848\r\n        file-extension: yaml\r\n        group: dev\r\n','b3aafe1d3548e30b9a50e5b83e76322c','2020-06-20 09:53:50','2020-06-20 09:53:50',NULL,'0:0:0:0:0:0:0:1','','f431bd53-e6c6-451c-803c-b32712f38562',NULL,NULL,NULL,'yaml',NULL),(29,'mogu-monitor.yaml','dev','server:\r\n  port: 8606\r\n\r\nspring:\r\n  application:\r\n    name: mogu-monitor\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 蘑菇博客监控中心\r\n        brand: 蘑菇博客监控中心\r\n      notify:\r\n        mail:\r\n          enabled: false\r\n          # 服务上下线会自动发送邮件\r\n          #from: mogublog@163.com\r\n          #to: moxi0624@163.com\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com\r\n    password: a1313375 #授权码开启SMTP服务里设置\r\n    host: smtp.163.com\r\n\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n            required: true\r\n          ssl:\r\n            enable: true\r\n\r\n#eureka相关配置\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    serviceUrl:\r\n#      defaultZone: http://user:password123@localhost:8761/eureka\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    health-check-url-path: /actuator/health\r\n#    metadata-map:\r\n#      user.name: admin\r\n#      user.password: 123456\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848','2fa47a5fe46b4bff73827e388adff194','2020-06-20 09:54:17','2020-06-20 09:54:17',NULL,'0:0:0:0:0:0:0:1','','f431bd53-e6c6-451c-803c-b32712f38562',NULL,NULL,NULL,'yaml',NULL),(30,'mogu-picture.yaml','dev','#app\r\nserver:\r\n  port: 8602\r\n\r\nfile:\r\n  upload:\r\n    path: D:/mogu_blog/data/\r\n\r\n#spring\r\nspring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      max-file-size: 100MB # 修改单次文件上传文件大小不能超过100MB\r\n      max-request-size: 500MB # 设置单次文件请求总大小不能超过500MB\r\n\r\n  jmx:\r\n    default-domain: mogu_picture\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-picture\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8602\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_picture?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n  mvc:\r\n    static-path-pattern: /upload/**\r\n  resources:\r\n    static-locations: classpath:/static/upload\r\n\r\n# eureka:\r\n#   client:\r\n#     healthcheck:\r\n#       enabled: true\r\n#     registerWithEureka: true\r\n#     fetchRegistry: true\r\n#     serviceUrl:\r\n#       defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#   instance:\r\n#     prefer-ip-address: true\r\n#     instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#     lease-renewal-interval-in-seconds: 5\r\n#     appname: mogu-picture\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.picture.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false','ae1488fad68d12c0c21657b10cc786ee','2020-06-20 09:54:42','2020-06-20 09:54:42',NULL,'0:0:0:0:0:0:0:1','','f431bd53-e6c6-451c-803c-b32712f38562',NULL,NULL,NULL,'yaml',NULL),(31,'mogu-sms.yaml','dev','#app\r\nserver:\r\n  port: 8604\r\n\r\n#阿里大于\r\naccessKeyId: XXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\naccessKeySecret: XXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_sms\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-sms\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  #RabbitMq\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com\r\n    password: a1313375 #授权码开启SMTP服务里设置\r\n    host: smtp.163.com\r\n    default-encoding: UTF-8\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          ssl:\r\n            enable: true\r\n          socketFactory:\r\n            port: 465\r\n            class: javax.net.ssl.SSLSocketFactory\r\n          auth: true\r\n          starttls:\r\n            enable: false\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8604\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    serviceUrl:\r\n#      defaultZone: http://user:password123@localhost:8761/eureka\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always','c305f6be9a4ba0cad2103891517aa4af','2020-06-20 09:55:01','2020-06-20 09:55:01',NULL,'0:0:0:0:0:0:0:1','','f431bd53-e6c6-451c-803c-b32712f38562',NULL,NULL,NULL,'yaml',NULL),(32,'mogu-spider.yaml','dev','#app\r\nserver:\r\n  port: 8608\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_spider\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-spider\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8608\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    registerWithEureka: true\r\n#    fetchRegistry: true\r\n#    serviceUrl:\r\n#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n#    appname: mogu-spider\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.spider.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false','93264bdf76cc2b0384ce28d2f2463811','2020-06-20 09:55:19','2020-06-20 09:55:19',NULL,'0:0:0:0:0:0:0:1','','f431bd53-e6c6-451c-803c-b32712f38562',NULL,NULL,NULL,'yaml',NULL),(33,'mogu-web.yaml','dev','#app\r\nserver:\r\n  port: 8603\r\n\r\n#阿里大于\r\ntemplateCode: SMS_XXXXXX #短信模板编号\r\n\r\nsignName: 蘑菇博客\r\n# 项目英文名\r\nPROJECT_NAME_EN: moguBlog\r\n#项目名称\r\nPROJECT_NAME: 蘑菇博客\r\n\r\ndata:\r\n  # 门户页面\r\n  webSite:\r\n    url: http://localhost:9527/#/\r\n  # mogu_web网址，用于第三方登录回调\r\n  web:\r\n    url: http://127.0.0.1:8603\r\n\r\nfile:\r\n  upload:\r\n    path: D:/mogu_blog/data/\r\n\r\n# 蘑菇博客登录默认密码\r\nDEFAULE_PWD: mogu2018\r\n\r\n#请求限制参数\r\nrequest-limit:\r\n  start: false # 是否开启请求限制，默认关闭\r\n  amount: 100 # 100次\r\n  time: 60000 # 1分钟\r\n\r\n#博客相关配置\r\nBLOG:\r\n  HOT_COUNT: 5 #热门博客数量\r\n  HOT_TAG_COUNT: 20 #热门标签数量\r\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\r\n  NEW_COUNT: 15 #最新博客数据\r\n  FIRST_COUNT: 5 #一级推荐\r\n  SECOND_COUNT: 2 #二级推荐\r\n  THIRD_COUNT: 3 #三级推荐\r\n  FOURTH_COUNT: 5 #四级推荐\r\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\r\n\r\n  # 原创模板\r\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\r\n  # 转载模板\r\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 %S ，版权归 %S 所有，如果侵权之处，请联系博主进行删除，谢谢~\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_web\r\n  # freemarker相关配置\r\n  freemarker:\r\n    charset: utf-8\r\n    suffix: .ftl\r\n    content-type: text/html\r\n    template-loader-path: classpath:/templates\r\n  # jackson配置响应时间格式、时区\r\n  jackson:\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n\r\n  application:\r\n    name: mogu-web\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 50\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #Solr配置信息\r\n  data:\r\n    solr:\r\n      host: http://localhost:8080/solr\r\n      core: collection1\r\n      repositories:\r\n        enabled: true\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8603\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n#eureka相关配置\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    registerWithEureka: true\r\n#    fetchRegistry: true\r\n#    serviceUrl:\r\n#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n\r\n# 或者：\r\nfeign.hystrix.enabled: false # 索性禁用feign的hystrix支持\r\n# 设置feign调用超时时间\r\nribbon:\r\n  ReadTimeout: 20000\r\n  ConnectTimeout: 20000\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n\r\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\r\njustAuth:\r\n  clientId:\r\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e # 改成自己的\r\n    github: c99bfe31f8774ec8e242 # 改成自己的\r\n    qq: XXXXXXXXXXXXXXX  # 改成自己的\r\n  clientSecret:\r\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47 # 改成自己的\r\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618 # 改成自己的\r\n    qq: XXXXXXXXXXXXXXXXXX # 改成自己的','233689198acc543aa89350d3f23058a2','2020-06-20 09:56:24','2020-06-20 09:56:24',NULL,'0:0:0:0:0:0:0:1','','f431bd53-e6c6-451c-803c-b32712f38562',NULL,NULL,NULL,'yaml',NULL),(38,'mogu-admin-dev.yaml','dev','#app\r\nserver:\r\n  port: 8601\r\n\r\n#阿里大于\r\ntemplateCode: SMS_XXXXXX #短信模板编号\r\nsignName: 蘑菇博客\r\n\r\n# 邮箱验证\r\nmoguBlog:\r\n  email: mogublog@163.com\r\n\r\n#spring\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  jmx:\r\n    default-domain: mogu_admin\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-admin\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 20\r\n    minIdle: 5\r\n    maxActive: 200\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    validationQuery: SELECT 1 FROM DUAL\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\r\n    username: guest\r\n    password: guest\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8601\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n\r\n\r\n# 或者：\r\nfeign.hystrix.enabled: false #索性禁用feign的hystrix支持\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n\r\n##jwt配置\r\ntokenHead: bearer_\r\ntokenHeader: Authorization\r\nisRememberMeExpiresSecond: 259200 #记住账号为3天有效\r\naudience:\r\n  clientId: 098f6bcd4621d373cade4e832627b4f6\r\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\r\n  name: mogublog\r\n  expiresSecond: 7200  #2个小时 7200\r\n  refreshSecond: 300 # 刷新token的时间 5分钟','c2bfb35be9411a0dd85052ea25a8a252','2020-06-20 10:20:17','2020-11-01 14:56:41',NULL,'0:0:0:0:0:0:0:1','','dev','null','null','null','yaml','null'),(39,'mogu-gateway-dev.yaml','dev','server:\r\n  port: 8607\r\n\r\nspring:\r\n  application:\r\n    name: mogu-gateway\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n      config:\r\n        server-addr: localhost:8848\r\n        file-extension: yaml\r\n        group: dev\r\n','b3aafe1d3548e30b9a50e5b83e76322c','2020-06-20 10:20:17','2020-06-20 10:20:17',NULL,'0:0:0:0:0:0:0:1','','dev',NULL,NULL,NULL,'yaml',NULL),(40,'mogu-monitor-dev.yaml','dev','server:\r\n  port: 8606\r\n\r\nspring:\r\n  application:\r\n    name: mogu-monitor\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 蘑菇博客监控中心\r\n        brand: 蘑菇博客监控中心\r\n      notify:\r\n        mail:\r\n          enabled: false\r\n          # 服务上下线会自动发送邮件\r\n          #from: mogublog@163.com\r\n          #to: moxi0624@163.com\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com\r\n    password: a1313375 #授权码开启SMTP服务里设置\r\n    host: smtp.163.com\r\n\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n            required: true\r\n          ssl:\r\n            enable: true\r\n\r\n#eureka相关配置\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    serviceUrl:\r\n#      defaultZone: http://user:password123@localhost:8761/eureka\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    health-check-url-path: /actuator/health\r\n#    metadata-map:\r\n#      user.name: admin\r\n#      user.password: 123456\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848','2fa47a5fe46b4bff73827e388adff194','2020-06-20 10:20:17','2020-06-20 10:20:17',NULL,'0:0:0:0:0:0:0:1','','dev',NULL,NULL,NULL,'yaml',NULL),(41,'mogu-picture-dev.yaml','dev','#app\r\nserver:\r\n  port: 8602\r\n\r\nfile:\r\n  upload:\r\n    path: D:\\mogu_blog\\data\r\n\r\n#spring\r\nspring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      max-file-size: 100MB # 修改单次文件上传文件大小不能超过100MB\r\n      max-request-size: 500MB # 设置单次文件请求总大小不能超过500MB\r\n\r\n  jmx:\r\n    default-domain: mogu_picture\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-picture\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8602\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://localhost:3306/mogu_picture?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n  mvc:\r\n    static-path-pattern: /upload/**\r\n  resources:\r\n    static-locations: classpath:/static/upload\r\n\r\n# eureka:\r\n#   client:\r\n#     healthcheck:\r\n#       enabled: true\r\n#     registerWithEureka: true\r\n#     fetchRegistry: true\r\n#     serviceUrl:\r\n#       defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#   instance:\r\n#     prefer-ip-address: true\r\n#     instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#     lease-renewal-interval-in-seconds: 5\r\n#     appname: mogu-picture\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.picture.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false','93825bb977346b1fcb1d342a913e1880','2020-06-20 10:20:17','2020-11-01 15:30:44',NULL,'0:0:0:0:0:0:0:1','','dev','null','null','null','yaml','null'),(42,'mogu-search-dev.yaml','dev','server:\r\n  port: 8605\r\nspring:\r\n  application:\r\n    name: mogu_search\r\n  jmx:\r\n    default-domain: mogu_search\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  data:\r\n    elasticsearch:\r\n      cluster-name: elasticsearch\r\n      cluster-nodes: localhost:9300\r\n  #    solr:\r\n  #      host: http://localhost:8080/solr\r\n  #      core: collection1\r\n  #      repositories:\r\n  #        enabled: true\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n      instance:\r\n        service-base-url: http://localhost:8605\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    registerWithEureka: true\r\n#    fetchRegistry: true\r\n#    serviceUrl:\r\n#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always','f999a529bd3778e88f8f9f96434f7dc7','2020-06-20 10:20:17','2020-06-20 10:20:17',NULL,'0:0:0:0:0:0:0:1','','dev',NULL,NULL,NULL,'yaml',NULL),(43,'mogu-sms-dev.yaml','dev','#app\r\nserver:\r\n  port: 8604\r\n\r\n#阿里大于\r\naccessKeyId: XXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\naccessKeySecret: XXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_sms\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-sms\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  #RabbitMq\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com\r\n    password: a1313375 #授权码开启SMTP服务里设置\r\n    host: smtp.163.com\r\n    default-encoding: UTF-8\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          ssl:\r\n            enable: true\r\n          socketFactory:\r\n            port: 465\r\n            class: javax.net.ssl.SSLSocketFactory\r\n          auth: true\r\n          starttls:\r\n            enable: false\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8604\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    serviceUrl:\r\n#      defaultZone: http://user:password123@localhost:8761/eureka\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: localhost:8848\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always','c305f6be9a4ba0cad2103891517aa4af','2020-06-20 10:20:17','2020-11-01 14:58:52',NULL,'0:0:0:0:0:0:0:1','','dev','null','null','null','yaml','null'),(58,'mogu-spider-dev.yaml','dev','#app\r\nserver:\r\n  port: 8608\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_spider\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-spider\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8608\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\neureka:\r\n  client:\r\n    healthcheck:\r\n      enabled: true\r\n    registerWithEureka: true\r\n    fetchRegistry: true\r\n    serviceUrl:\r\n      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n  instance:\r\n    prefer-ip-address: true\r\n    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n    lease-renewal-interval-in-seconds: 5\r\n    appname: mogu-spider\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.spider.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false','f86c184436ef51e51040f7f793a30b6f','2020-06-20 10:45:53','2020-06-20 10:45:53',NULL,'0:0:0:0:0:0:0:1','','dev',NULL,NULL,NULL,'yaml',NULL),(59,'mogu-web-dev.yaml','dev','#app\r\nserver:\r\n  port: 8603\r\n\r\n#阿里大于\r\ntemplateCode: SMS_XXXXXX #短信模板编号\r\n\r\nsignName: 蘑菇博客\r\n# 项目英文名\r\nPROJECT_NAME_EN: moguBlog\r\n#项目名称\r\nPROJECT_NAME: 蘑菇博客\r\n\r\ndata:\r\n  # 门户页面\r\n  webSite:\r\n    url: http://localhost:9527/#/\r\n  # mogu_web网址，用于第三方登录回调\r\n  web:\r\n    url: http://127.0.0.1:8603\r\n\r\nfile:\r\n  upload:\r\n    path: E:/项目学习/mogu_blog/data/\r\n\r\n# 蘑菇博客登录默认密码\r\nDEFAULE_PWD: mogu2018\r\n\r\n#请求限制参数\r\nrequest-limit:\r\n  start: false # 是否开启请求限制，默认关闭\r\n  amount: 100 # 100次\r\n  time: 60000 # 1分钟\r\n\r\n#博客相关配置\r\nBLOG:\r\n  HOT_COUNT: 5 #热门博客数量\r\n  HOT_TAG_COUNT: 20 #热门标签数量\r\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\r\n  NEW_COUNT: 15 #最新博客数据\r\n  FIRST_COUNT: 5 #一级推荐\r\n  SECOND_COUNT: 2 #二级推荐\r\n  THIRD_COUNT: 3 #三级推荐\r\n  FOURTH_COUNT: 5 #四级推荐\r\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\r\n\r\n  # 原创模板\r\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\r\n  # 转载模板\r\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 %S ，版权归 %S 所有，如果侵权之处，请联系博主进行删除，谢谢~\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_web\r\n  # freemarker相关配置\r\n  freemarker:\r\n    charset: utf-8\r\n    suffix: .ftl\r\n    content-type: text/html\r\n    template-loader-path: classpath:/templates\r\n  # jackson配置响应时间格式、时区\r\n  jackson:\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n\r\n  application:\r\n    name: mogu-web\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: 123456\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 50\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #Solr配置信息\r\n  data:\r\n    solr:\r\n      host: http://localhost:8080/solr\r\n      core: collection1\r\n      repositories:\r\n        enabled: true\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\r\n\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8603\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n#eureka相关配置\r\neureka:\r\n  client:\r\n    healthcheck:\r\n      enabled: true\r\n    registerWithEureka: true\r\n    fetchRegistry: true\r\n    serviceUrl:\r\n      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n  instance:\r\n    prefer-ip-address: true\r\n    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n    lease-renewal-interval-in-seconds: 5\r\n\r\n# 或者：\r\nfeign.hystrix.enabled: false # 索性禁用feign的hystrix支持\r\n# 设置feign调用超时时间\r\nribbon:\r\n  ReadTimeout: 20000\r\n  ConnectTimeout: 20000\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n\r\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\r\njustAuth:\r\n  clientId:\r\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e\r\n    github: c99bfe31f8774ec8e242\r\n    qq: 101880644  # 改成自己的\r\n  clientSecret:\r\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47\r\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618\r\n    qq: cbc294d36dabeac4bf6c31ced8bf930f # 改成自己的\r\n\r\n# uniapp相关配置\r\nuniapp:\r\n  qq:\r\n    appid: 1110769790  # 改成自己的\r\n    secret: zWZBLzBcekMUTP60  # 改成自己的\r\n    grant_type: authorization_code','396d991c4d80a4312a48077012650c12','2020-06-20 10:47:34','2020-11-01 14:59:56',NULL,'0:0:0:0:0:0:0:1','','dev','蘑菇博客dev环境配置','null','null','yaml','null'),(64,'codeduck-web-dev.yml','DEV_GROUP','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称','a00e7daa1b7a6be7eb3c9668fc3f8298','2020-11-20 01:55:34','2020-11-20 15:53:50',NULL,'0:0:0:0:0:0:0:1','','codeduck-dev','codeduck blog前端门户配置中心','null','null','yaml','null'),(65,'codeduck-admin-dev.yml','DEV_GROUP','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n#    host: 172.17.0.1\r\n#    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\n## 其它配置 - start\r\nconfig:\r\n  jwt:\r\n    # JWT认证加密私钥(Base64加密)\r\n    encrypt-jwtKey: U0DJBUCElKOENhCspOJrzkDyNEjQ1NA\r\n    # AccessToken过期时间(单位：秒) 30 分钟\r\n    accessToken-expireTime: 604800\r\n    # RefreshToken过期时间(单位：秒) 7 天\r\n    refreshToken-expireTime: 604800\r\n    # Shiro缓存过期时间(单位：秒)(一般设置与AccessToken过期时间一致) 此处CustomCache读取失败，待解决\r\n    shiro-cache-expireTime: 1800\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data\r\n## 其它配置 - end','1fe3a7317cdf1e9ba494abf6271f03ce','2020-11-20 01:57:04','2020-11-23 11:08:04',NULL,'0:0:0:0:0:0:0:1','','codeduck-dev','codeduck blog后台数据管理系统配置中心','','','yaml','');

/*Table structure for table `config_info_aggr` */

DROP TABLE IF EXISTS `config_info_aggr`;

CREATE TABLE `config_info_aggr` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='增加租户字段';

/*Data for the table `config_info_aggr` */

/*Table structure for table `config_info_beta` */

DROP TABLE IF EXISTS `config_info_beta`;

CREATE TABLE `config_info_beta` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) COLLATE utf8_bin DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='config_info_beta';

/*Data for the table `config_info_beta` */

/*Table structure for table `config_info_tag` */

DROP TABLE IF EXISTS `config_info_tag`;

CREATE TABLE `config_info_tag` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='config_info_tag';

/*Data for the table `config_info_tag` */

/*Table structure for table `config_tags_relation` */

DROP TABLE IF EXISTS `config_tags_relation`;

CREATE TABLE `config_tags_relation` (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) COLLATE utf8_bin DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),
  KEY `idx_tenant_id` (`tenant_id`),
  KEY `config_tags_tenant_id_idx` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='config_tag_relation';

/*Data for the table `config_tags_relation` */

/*Table structure for table `group_capacity` */

DROP TABLE IF EXISTS `group_capacity`;

CREATE TABLE `group_capacity` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_group_id` (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='集群、各Group容量信息表';

/*Data for the table `group_capacity` */

/*Table structure for table `his_config_info` */

DROP TABLE IF EXISTS `his_config_info`;

CREATE TABLE `his_config_info` (
  `id` bigint(64) unsigned NOT NULL,
  `nid` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) COLLATE utf8_bin DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text COLLATE utf8_bin,
  `src_ip` varchar(20) COLLATE utf8_bin DEFAULT NULL,
  `op_type` char(10) COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`),
  KEY `idx_gmt_create` (`gmt_create`),
  KEY `idx_gmt_modified` (`gmt_modified`),
  KEY `idx_did` (`data_id`),
  KEY `hisconfiginfo_dataid_key_idx` (`data_id`),
  KEY `hisconfiginfo_gmt_create_idx` (`gmt_create`),
  KEY `hisconfiginfo_gmt_modified_idx` (`gmt_modified`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='多租户改造';

/*Data for the table `his_config_info` */

insert  into `his_config_info`(`id`,`nid`,`data_id`,`group_id`,`app_name`,`content`,`md5`,`gmt_create`,`gmt_modified`,`src_user`,`src_ip`,`op_type`,`tenant_id`) values (0,21,'codeduck-admin','dev','','server:\r\n  port: 8000\r\n\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n  #nacos 发现中心配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 127.0.0.1:8848\r\n  application:\r\n    name: codeduck-blog-server\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','74c1cdbbc5e2609f81c17d82450900a5','2020-11-19 20:41:28','2020-11-19 20:41:29',NULL,'0:0:0:0:0:0:0:1','I','7814735f-c8d5-4841-ab90-4b170a624f66'),(60,22,'codeduck-admin','dev','','server:\r\n  port: 8000\r\n\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n  #nacos 发现中心配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 127.0.0.1:8848\r\n  application:\r\n    name: codeduck-blog-server\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','74c1cdbbc5e2609f81c17d82450900a5','2020-11-19 20:42:00','2020-11-19 20:42:01',NULL,'0:0:0:0:0:0:0:1','D','7814735f-c8d5-4841-ab90-4b170a624f66'),(0,23,'codeduck-admin.yml','dev','','server:\r\n  port: 8000\r\n\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n  #nacos 发现中心配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 127.0.0.1:8848\r\n  application:\r\n    name: codeduck-blog-server\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','74c1cdbbc5e2609f81c17d82450900a5','2020-11-19 20:43:25','2020-11-19 20:43:25',NULL,'0:0:0:0:0:0:0:1','I','7814735f-c8d5-4841-ab90-4b170a624f66'),(61,24,'codeduck-admin.yml','dev','','server:\r\n  port: 8000\r\n\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n  #nacos 发现中心配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 127.0.0.1:8848\r\n  application:\r\n    name: codeduck-blog-server\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','74c1cdbbc5e2609f81c17d82450900a5','2020-11-19 20:44:05','2020-11-19 20:44:05',NULL,'0:0:0:0:0:0:0:1','D','7814735f-c8d5-4841-ab90-4b170a624f66'),(0,25,'codeduck-admin-dev.yml','dev','','server:\r\n  port: 8000\r\n\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n  #nacos 发现中心配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 127.0.0.1:8848\r\n  application:\r\n    name: codeduck-blog-server\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','74c1cdbbc5e2609f81c17d82450900a5','2020-11-19 20:45:05','2020-11-19 20:45:06',NULL,'0:0:0:0:0:0:0:1','I','codeduck-dev'),(0,26,'codeduck-web-dev.yml','dev','','server:\r\n  port: 8202\r\n\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n  #nacos 发现中心配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 127.0.0.1:8848\r\n  application:\r\n    name: codeduck-blog-web\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称','4d5e13f6aa7a7039d6de505eac3f01a0','2020-11-19 21:09:38','2020-11-19 21:09:39',NULL,'0:0:0:0:0:0:0:1','I','codeduck-dev'),(63,27,'codeduck-web-dev.yml','dev','','server:\r\n  port: 8202\r\n\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n  #nacos 发现中心配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 127.0.0.1:8848\r\n  application:\r\n    name: codeduck-blog-web\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称','4d5e13f6aa7a7039d6de505eac3f01a0','2020-11-20 09:54:07','2020-11-20 01:54:07',NULL,'0:0:0:0:0:0:0:1','D','codeduck-dev'),(0,28,'codeduck-web-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称','bbdf20abc3c06ac0901d56108511adc1','2020-11-20 09:55:33','2020-11-20 01:55:34',NULL,'0:0:0:0:0:0:0:1','I','codeduck-dev'),(62,29,'codeduck-admin-dev.yml','dev','','server:\r\n  port: 8000\r\n\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n  #nacos 发现中心配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 127.0.0.1:8848\r\n  application:\r\n    name: codeduck-blog-server\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','74c1cdbbc5e2609f81c17d82450900a5','2020-11-20 09:55:47','2020-11-20 01:55:48',NULL,'0:0:0:0:0:0:0:1','D','codeduck-dev'),(0,30,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','a0875dd066bb574faaaa991162908eb9','2020-11-20 09:57:04','2020-11-20 01:57:04',NULL,'0:0:0:0:0:0:0:1','I','codeduck-dev'),(64,31,'codeduck-web-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称','bbdf20abc3c06ac0901d56108511adc1','2020-11-20 20:37:17','2020-11-20 12:37:17',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(64,32,'codeduck-web-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称','a00e7daa1b7a6be7eb3c9668fc3f8298','2020-11-20 21:24:32','2020-11-20 13:24:32',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(64,33,'codeduck-web-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\n# mybatis-plus:\r\n#   # mapper文件\r\n#   mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n#   type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n#   global-config:\r\n#     # 数据库相关配置\r\n#     db-config:\r\n#       #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n#       field-strategy: not_empty\r\n#       # 表的前缀\r\n#       table-prefix: tb_\r\n#       logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n#       logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称','ee31d7355d8a9fb0863f7d4cc9606c45','2020-11-20 23:53:50','2020-11-20 15:53:50',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,34,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','a0875dd066bb574faaaa991162908eb9','2020-11-23 13:47:46','2020-11-23 05:47:46',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,35,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','4d1cea115aff11a5e7b9f28bdbca490e','2020-11-23 15:11:00','2020-11-23 07:11:00',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,36,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','4d1cea115aff11a5e7b9f28bdbca490e','2020-11-23 15:19:55','2020-11-23 07:19:56',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,37,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=false&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','fd93e39fa6c0d34addc7d2c53f6175af','2020-11-23 15:20:50','2020-11-23 07:20:51',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,38,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','4d1cea115aff11a5e7b9f28bdbca490e','2020-11-23 15:43:48','2020-11-23 07:43:49',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,39,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','4d1cea115aff11a5e7b9f28bdbca490e','2020-11-23 15:44:13','2020-11-23 07:44:13',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,40,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','4d1cea115aff11a5e7b9f28bdbca490e','2020-11-23 17:31:47','2020-11-23 09:31:48',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,41,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 40MB   #设置单个上传的文件大小\r\n      max-request-size: 100MB  #设置单次请求的文件的总大小\r\n\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n\r\n  ## Redis配置 - start\r\n  redis:\r\n    # Redis数据库索引（默认为0）\r\n    database: 1\r\n    # Redis服务器地址\r\n    host: 127.0.0.1\r\n    #    host: 172.17.0.1\r\n    #    host: 192.168.192.169\r\n    # Redis服务器连接端口\r\n    port: 6379\r\n    # Redis服务器连接密码（默认为空）\r\n    # password: \"\"\r\n    # 连接超时时间（毫秒）\r\n    timeout: 5000\r\n    jedis:\r\n      pool:\r\n        # 连接池最大连接数（使用负值表示没有限制）\r\n        max-active: 8\r\n        # 连接池最大阻塞等待时间（使用负值表示没有限制）\r\n        max-wait: -1\r\n        # 连接池中的最大空闲连接\r\n        max-idle: 8\r\n        # 连接池中的最小空闲连接\r\n        min-idle: 0\r\n  ## Redis配置 - end\r\n\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n\r\n# slf4j日志配置信息，控制台提示的日志信息\r\nlogging:\r\n  level:\r\n    com:\r\n      gulang:\r\n        dao: debug   # 显示查询sql语句的详情\r\n    root: INFO  #DEBUG,WARN,ERROR  #日志配置DEBUG,INFO,WARN,ERROR\r\n# file: demo_log.log #配置日志生成的具体文件名（文件会生成在项目目录的根目录下）\r\n# path: /logs #配置日志文件所在目录名称\r\n\r\n# 不需要授权的公共接口(最后需要加 “,”)\r\ncommon_auth: \"/user/info/**,\"\r\n\r\n# 七牛云存储\r\noss:\r\n  qiniu:\r\n    domain: http://codeduck.top # 访问域名(默认使用七牛云测试域名)\r\n    accessKey: LbO-QiXM6F7zGbz7inl-PrmJPh6B7QoytdoF4H3p # 公钥\r\n    secretKey: TyJAtXhBR8pFDK6Soz5qv4zP7G9BPYo-3_gxbA5k # 私钥\r\n    bucketName: codeduck  #存储空间名称\r\n\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data','4d1cea115aff11a5e7b9f28bdbca490e','2020-11-23 18:27:43','2020-11-23 10:27:43',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,42,'codeduck-admin-dev.yml','DEV_GROUP','','file:\r\n  upload:\r\n    path: D:/code_duck/data','6bd04359bb8428824e55c537202178c2','2020-11-23 18:28:58','2020-11-23 10:28:59',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,43,'codeduck-admin-dev.yml','DEV_GROUP','','## 其它配置 - start\r\nconfig:\r\n  jwt:\r\n    # JWT认证加密私钥(Base64加密)\r\n    encrypt-jwtKey: U0DJBUCElKOENhCspOJrzkDyNEjQ1NA\r\n    # AccessToken过期时间(单位：秒) 30 分钟\r\n    accessToken-expireTime: 604800\r\n    # RefreshToken过期时间(单位：秒) 7 天\r\n    refreshToken-expireTime: 604800\r\n    # Shiro缓存过期时间(单位：秒)(一般设置与AccessToken过期时间一致) 此处CustomCache读取失败，待解决\r\n    shiro-cache-expireTime: 1800\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data\r\n## 其它配置 - end','fdb4a941bcbf4cd3e50c40acafab8f70','2020-11-23 19:00:21','2020-11-23 11:00:22',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev'),(65,44,'codeduck-admin-dev.yml','DEV_GROUP','','spring:\r\n  # 数据库配置\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/codeduck_blog?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\n    username: root\r\n    password: 123456\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      initial-size: 5 #连接池初始化大小\r\n      min-idle: 10 #最小空闲连接数\r\n      max-active: 20 #最大连接数\r\n      web-stat-filter:\r\n        exclusions: \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\" #不统计这些请求数据\r\n      stat-view-servlet: #访问监控网页的登录用户名和密码\r\n        login-username: druid\r\n        login-password: druid\r\n# mybatis-plus配置\r\nmybatis-plus:\r\n  # mapper文件\r\n  mapper-locations: classpath*:/mapper/**Mapper.xml   # xml文件所在位置\r\n  type-aliases-package: com.duck.code.commons.entity.*  #实体扫描，多个package用逗号或者分号分隔\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: not_empty\r\n      # 表的前缀\r\n      table-prefix: tb_\r\n      logic-delete-value: 1 # 逻辑已删除值(默认为 1)\r\n      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)\r\n\r\n  #mybatis原生配置\r\n  configuration:\r\n    #驼峰下划线转换\r\n    map-underscore-to-camel-case: true\r\n    #不开启二级缓存\r\n    cache-enabled: false\r\n## 其它配置 - start\r\nconfig:\r\n  jwt:\r\n    # JWT认证加密私钥(Base64加密)\r\n    encrypt-jwtKey: U0DJBUCElKOENhCspOJrzkDyNEjQ1NA\r\n    # AccessToken过期时间(单位：秒) 30 分钟\r\n    accessToken-expireTime: 604800\r\n    # RefreshToken过期时间(单位：秒) 7 天\r\n    refreshToken-expireTime: 604800\r\n    # Shiro缓存过期时间(单位：秒)(一般设置与AccessToken过期时间一致) 此处CustomCache读取失败，待解决\r\n    shiro-cache-expireTime: 1800\r\nfile:\r\n  upload:\r\n    path: D:/code_duck/data\r\n## 其它配置 - end','00a1d096c243ec8b236aab05c903dbe3','2020-11-23 19:08:03','2020-11-23 11:08:04',NULL,'0:0:0:0:0:0:0:1','U','codeduck-dev');

/*Table structure for table `permissions` */

DROP TABLE IF EXISTS `permissions`;

CREATE TABLE `permissions` (
  `role` varchar(50) NOT NULL,
  `resource` varchar(512) NOT NULL,
  `action` varchar(8) NOT NULL,
  UNIQUE KEY `uk_role_permission` (`role`,`resource`,`action`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

/*Data for the table `permissions` */

/*Table structure for table `roles` */

DROP TABLE IF EXISTS `roles`;

CREATE TABLE `roles` (
  `username` varchar(50) NOT NULL,
  `role` varchar(50) NOT NULL,
  UNIQUE KEY `idx_user_role` (`username`,`role`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

/*Data for the table `roles` */

insert  into `roles`(`username`,`role`) values ('nacos','ROLE_ADMIN');

/*Table structure for table `tenant_capacity` */

DROP TABLE IF EXISTS `tenant_capacity`;

CREATE TABLE `tenant_capacity` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='租户容量信息表';

/*Data for the table `tenant_capacity` */

/*Table structure for table `tenant_info` */

DROP TABLE IF EXISTS `tenant_info`;

CREATE TABLE `tenant_info` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) COLLATE utf8_bin DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),
  KEY `idx_tenant_id` (`tenant_id`),
  KEY `tenant_info_tenant_id_idx` (`tenant_id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='tenant_info';

/*Data for the table `tenant_info` */

insert  into `tenant_info`(`id`,`kp`,`tenant_id`,`tenant_name`,`tenant_desc`,`create_source`,`gmt_create`,`gmt_modified`) values (4,'1','dev','dev','开发环境','nacos',1592618800112,1592618800112),(5,'1','prod','prod','生产环境','nacos',1592618913047,1592618913047),(6,'1','test','test','test','nacos',1592620383966,1592620383966),(7,'1','codeduck-dev','codeduck-dev','codeduck开发环境配置中心','nacos',1605789567350,1605789567350);

/*Table structure for table `users` */

DROP TABLE IF EXISTS `users`;

CREATE TABLE `users` (
  `username` varchar(50) NOT NULL,
  `password` varchar(500) NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

/*Data for the table `users` */

insert  into `users`(`username`,`password`,`enabled`) values ('nacos','$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu',1);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
